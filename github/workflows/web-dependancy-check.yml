name: Dependency Check

on: 
  workflow_run:
      workflows: [Web Deploy]
      types:
        - completed
        
jobs:
  depcheck:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x]
    
    name: dep_check
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Env Setup
        run:  |
              echo "PRODUCT_NAME=$(git config --get remote.origin.url | cut -d"." -f2 | cut -d"/" -f3 | cut -d"-" -f1 | cut -d"_" -f2)" >> $GITHUB_ENV #NOTE: only works with HTTPS repo urls + will cause issues with bny_investments
        
      - name: Artifactory Setup
        run: |
              echo "Artifactory:"
              date
              npm config set @genesisglobal:registry https://genesisglobal.jfrog.io/artifactory/api/npm/npm-local/
              npm config set //genesisglobal.jfrog.io/artifactory/api/npm/npm-local/:username ${{secrets.JFROG_RO_USER}}
              echo ${{secrets.JFROG_RO_USER}}@genesis.global | npm config set //genesisglobal.jfrog.io/artifactory/api/npm/npm-local/:email
              npm config set //genesisglobal.jfrog.io/artifactory/api/npm/npm-local/:always-auth true
              npm config set //genesisglobal.jfrog.io/artifactory/api/npm/npm-local/:_auth ${{secrets.JFROG_NPM_AUTH_TOKEN}}
              #npm config set @genesislcap:registry https://npm.pkg.github.com/
              cat ~/.npmrc
              
      - name: Configure Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://npm.pkg.github.com/
          scope: '@genesislcap'
        
      - name: Bootstrap
        run:  |
              echo "Bootstrap:"
              date
              npm run bootstrap
        env:
          NODE_AUTH_TOKEN: ${{secrets.GPR_READ_TOKEN}}  
          
      - name: Check Cache
        id:   cache-check
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
          
      - uses:  actions/cache@v2
        with:
          path: ${{ steps.cache-check.outputs.dir }}
          key: ${{ runner.os }}-bootstrap-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-bootstrap-${{ hashFiles('**/package-lock.json') }}
        
      - name: Install
        if: steps.cache-check.outputs.cache-hit != 'true'
        run: |
          npm install
          
      - name: Build project with NPM
        working-directory: packages/apps/${{ env.PRODUCT_NAME }}
        run: |
          npm run build
        
      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'test'
          path: '.'
          format: 'HTML'    
          args: >
            --failOnCVSS 7
            --enableRetired
            
      - name: Upload Test results
        uses: actions/upload-artifact@master
        with:
           name: Depcheck report
           path: ${{github.workspace}}/reports